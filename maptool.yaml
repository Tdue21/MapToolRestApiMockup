openapi: 3.0.3
info:
  title: Swagger MapTool - OpenAPI 3.0
  description: 'This is a sample MapTool Server based on the OpenAPI 3.0 specification. '
  version: 0.1.0
#servers:
#  - url: lib://maptool.api/
#  - url: https://maptool.swagger.io/api/v1
tags:
  - name: Data
    description: MapTool data access from libraries
paths:
  /namespaces:
    get:
      tags:
        - Data
      summary: List all available namespaces
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
              example:
                - net.rptools.lib
                - net.example.addon
                - org.my.example
                
  /namespaces/{namespace}:
    get:
      tags: 
        - Data
      summary: Get information about add-on with the supplied namespace.
      parameters:
        - name: namespace
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Namespace'
        '404':
          description: not found
                
  /data/{namespace}/items:
    get:
      tags:
        - Data
      summary: List all data items in the library
      parameters:
        - name: namespace
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FileItem'
              example:
                - name: public/auto_exec.mts
                  autoExecute: true
                  description: Auto executable macro link
                - name: public/myUDF.mts
                  description: My Test UDF in a drop in lib
        '404':
          description: not found
    post:
      tags:
        - Data
      summary: Create a new data item in the library.
      parameters:
        - name: namespace
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: create a new item in the library.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FileItem'
      responses:
        '204':
          description: successful operation
        '400':
          description: Invalid input
        '422':
          description: Validation exception                  

  /data/{namespace}/items/{item}:
    get:
      tags:
        - Data
      summary: Get a data item from the library
      parameters:
        - name: namespace
          in: path
          required: true
          schema:
            type: string
        - name: item
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileItem'
              example:
                name: public/auto_exec.mts
                autoExecute: true
                description: Auto executable macro link
        '404':
          description: not found
    delete:
      tags:
        - Data
      summary: Delete a data item in the library.
      parameters:
        - name: namespace
          in: path
          required: true
          schema:
            type: string
        - name: item
          in: path
          required: true
          schema:
            type: string
            
      responses:
        '204':
          description: successful operation
        '400':
          description: Invalid input
        '422':
          description: Validation exception                  

  /data/{namespace}/items/findByName:
    get:
      tags:
        - Data
      summary: List all data items in the library which match the supplied name.
      parameters:
        - name: namespace
          in: path
          required: true
          schema:
            type: string
        - name: name
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FileItem'
              example:
                - name: public/auto_exec.mts
                  autoExecute: true
                  description: Auto executable macro link
                - name: public/myUDF.mts
                  description: My Test UDF in a drop in lib
        '404':
          description: not found

                
  /data/{namespace}/items/findByPath:
    get:
      tags:
        - Data
      summary: List all data items in the library which match the supplied path.
      parameters:
        - name: namespace
          in: path
          required: true
          schema:
            type: string
        - name: path
          in: query
          required: true
          schema:
            type: string
        - name: recurse
          in: query
          required: false
          schema:
            type: boolean
            
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FileItem'
              example:
                - name: public/auto_exec.mts
                  autoExecute: true
                  description: Auto executable macro link
                - name: public/myUDF.mts
                  description: My Test UDF in a drop in lib
        '404':
          description: not found


  /data/{namespace}/items/content/{item}:
    get:
      tags:
        - Data
      summary: Get the content of a data item from the library
      parameters:
        - name: namespace
          in: path
          required: true
          schema:
            type: string
        - name: item
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: string
            
        '404':
          description: not found

    post:
      tags:
        - Data
      summary: Posts the content of a data item from the library
      parameters:
        - name: namespace
          in: path
          required: true
          schema:
            type: string
        - name: item
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: The content of the data file. 
        content:
          application/text:
            schema:
              type: string
          
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
            
        '404':
          description: not found


components:
  schemas:
    Namespace:
      type: object
      properties:
        name: 
          type: string
          description: name of the library
          example: test-library
        version: 
          type: string
          example: 1.0.0
        website: 
          type: string
          example: www.rptools.net
        gitUrl:  
          type: string
          example: github.com/RPTools/test-library
        authors:
          type: array
          items:
            type: string
          example:
            - RPTools Team
        license:  
          type: string
          example: GPL 3.0
        namespace:  
          type: string
          example: net.rptools.maptool.test-library
        description:  
          type: string
          example: My new test library for stuff
        shortDescription:  
          type: string
          example: test library
        allowsUriAccess:  
          type: boolean
          example: true
        readMeFile:  
          type: string
          example: readme.md
        licenseFile:  
          type: string
          example: license.txt
        requires: 
          type: array
          items:
            type: string
          example: 
            - net.rptools.maptool.lib.tokens
        exports:
          type: array
          items:
            type: string
          example: 
            - /somedir/
            - /someotherdir/somefile.js

    FileItem:
      type: object
      properties:
        name:
          type: string
          description: The name and path of the file
        autoExecute:
          type: boolean
          description: Whether the macro can auto execute.
        description:
          type: string
          description: A description of the file.
      required:
        - name
      example:
        name: public/auto_exec.mts
        description: Auto executable macro link
        
